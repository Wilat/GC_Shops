// <auto-generated />
using System;
using GS_Shops.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gc_Shops.Db.MSSql.Migrations
{
    [DbContext(typeof(FeaturesDbContext))]
    [Migration("20201015161440_SwitchSellAnbBuyFieldsValues")]
    partial class SwitchSellAnbBuyFieldsValues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GC_Shops.Features.ItemComponent.Item", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StackSize")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GC_Shops.Features.MetroComponent.ControlBlock", b =>
                {
                    b.Property<int>("ControlBlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EastCbControlBlockId")
                        .HasColumnType("int");

                    b.Property<Guid>("MetroStationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NorthCbControlBlockId")
                        .HasColumnType("int");

                    b.Property<int?>("SouthCbControlBlockId")
                        .HasColumnType("int");

                    b.Property<int?>("WestCbControlBlockId")
                        .HasColumnType("int");

                    b.HasKey("ControlBlockId");

                    b.HasIndex("EastCbControlBlockId");

                    b.HasIndex("MetroStationId");

                    b.HasIndex("NorthCbControlBlockId");

                    b.HasIndex("SouthCbControlBlockId");

                    b.HasIndex("WestCbControlBlockId");

                    b.ToTable("ControlBlocks");
                });

            modelBuilder.Entity("GC_Shops.Features.MetroComponent.MetroOwner", b =>
                {
                    b.Property<Guid>("MetroOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetroOwnerId");

                    b.ToTable("MetroOwners");
                });

            modelBuilder.Entity("GC_Shops.Features.MetroComponent.MetroStation", b =>
                {
                    b.Property<Guid>("MetroStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerMetroOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MetroStationId");

                    b.HasIndex("OwnerMetroOwnerId");

                    b.HasIndex("ShopId");

                    b.ToTable("MetroStation");
                });

            modelBuilder.Entity("GC_Shops.Features.ShopComponent.Shop", b =>
                {
                    b.Property<Guid>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("GC_Shops.Features.ShopComponent.ShopItem", b =>
                {
                    b.Property<Guid>("ShopId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("BuyCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ItemsInBuy")
                        .HasColumnType("bigint");

                    b.Property<long>("ItemsInSell")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SellCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ShopId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("ShopItem");
                });

            modelBuilder.Entity("GC_Shops.Features.MetroComponent.ControlBlock", b =>
                {
                    b.HasOne("GC_Shops.Features.MetroComponent.ControlBlock", "EastCb")
                        .WithMany()
                        .HasForeignKey("EastCbControlBlockId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GC_Shops.Features.MetroComponent.MetroStation", null)
                        .WithMany("ControlBlocks")
                        .HasForeignKey("MetroStationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GC_Shops.Features.MetroComponent.ControlBlock", "NorthCb")
                        .WithMany()
                        .HasForeignKey("NorthCbControlBlockId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GC_Shops.Features.MetroComponent.ControlBlock", "SouthCb")
                        .WithMany()
                        .HasForeignKey("SouthCbControlBlockId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GC_Shops.Features.MetroComponent.ControlBlock", "WestCb")
                        .WithMany()
                        .HasForeignKey("WestCbControlBlockId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsOne("GC_Shops.Features.CoordinateComponent.Coordinate", "Coordinate", b1 =>
                        {
                            b1.Property<int>("ControlBlockId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("X")
                                .HasColumnName("Coordinate_X")
                                .HasColumnType("int");

                            b1.Property<int>("Y")
                                .HasColumnName("Coordinate_Y")
                                .HasColumnType("int");

                            b1.Property<int>("Z")
                                .HasColumnName("Coordinate_Z")
                                .HasColumnType("int");

                            b1.HasKey("ControlBlockId");

                            b1.HasIndex("X", "Y", "Z");

                            b1.ToTable("ControlBlocks");

                            b1.WithOwner()
                                .HasForeignKey("ControlBlockId");
                        });
                });

            modelBuilder.Entity("GC_Shops.Features.MetroComponent.MetroStation", b =>
                {
                    b.HasOne("GC_Shops.Features.MetroComponent.MetroOwner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerMetroOwnerId");

                    b.HasOne("GC_Shops.Features.ShopComponent.Shop", null)
                        .WithMany("MetroStations")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("GC_Shops.Features.ShopComponent.Shop", b =>
                {
                    b.OwnsOne("GC_Shops.Features.CoordinateComponent.Coordinate", "Coordinate", b1 =>
                        {
                            b1.Property<Guid>("ShopId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("X")
                                .HasColumnType("int");

                            b1.Property<int>("Y")
                                .HasColumnType("int");

                            b1.Property<int>("Z")
                                .HasColumnType("int");

                            b1.HasKey("ShopId");

                            b1.ToTable("Shops");

                            b1.WithOwner()
                                .HasForeignKey("ShopId");
                        });
                });

            modelBuilder.Entity("GC_Shops.Features.ShopComponent.ShopItem", b =>
                {
                    b.HasOne("GC_Shops.Features.ItemComponent.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GC_Shops.Features.ShopComponent.Shop", "Shop")
                        .WithMany("Items")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
